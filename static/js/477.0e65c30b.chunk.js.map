{"version":3,"file":"static/js/477.0e65c30b.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectStatusFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectUser = state => state.auth.user;\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\nexport const selectIsFetching = state => state.auth.isFetching;\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"ContactForm_formContainer__TWEE2\",\"form\":\"ContactForm_form__dhl+T\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formInput\":\"ContactForm_formInput__GszVU\",\"addContactBtn\":\"ContactForm_addContactBtn__3KI6e\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\nimport styles from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [contactName, setContactName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (contacts.some(({ name }) => name === contactName)) {\n      window.alert(`${contactName} is already in your contacts`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name: contactName,\n        number,\n      })\n    );\n\n    setContactName('');\n    setNumber('');\n  };\n\n  const handleChange = (e) => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case 'name':\n        setContactName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div className={styles.formContainer}>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <label className={styles.formLabel}>\n          Name\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            name=\"name\"\n            value={contactName}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters\"\n            required\n            placeholder=\"Michael Jordan\"\n          />\n        </label>\n\n        <label className={styles.formLabel}>\n          Number\n          <input\n            className={styles.formInput}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can start with +\"\n            required\n            placeholder=\"+380 000 000 000\"\n          />\n        </label>\n\n        <button className={styles.addContactBtn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"contactListBtn\":\"ContactList_contactListBtn__iwQAv\",\"contactText\":\"ContactList_contactText__mBjoQ\"};","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts, selectStatusFilter } from 'redux/selectors';\n\nimport styles from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filtered = useSelector(selectStatusFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const normalizedFilter = filtered.toLowerCase();\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <div>\n      {filteredContacts.length === 0 ? (\n        <p>No contacts found.</p>\n      ) : (\n        <ul className={styles.contactList}>\n          {filteredContacts.map(({ id, name, number }) => (\n            <li key={id} className={styles.contactItem}>\n              <p className={styles.contactText}>\n                {name}: {number}\n              </p>\n              <button\n                className={styles.contactListBtn}\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(id))}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteContact: PropTypes.func, \n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactLabel\":\"Filter_contactLabel__TqLYf\",\"contactInput\":\"Filter_contactInput__YRet6\",\"loader\":\"Filter_loader__8ZH1R\",\"contactsTitle\":\"Filter_contactsTitle__eTnDx\",\"phonebookTitle\":\"Filter_phonebookTitle__dPi5L\",\"animatedBackground\":\"Filter_animatedBackground__ELOCj\"};","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectStatusFilter } from 'redux/selectors';\nimport styles from './Filter.module.css';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label className={styles.contactLabel}>\n      Find contacts by name\n      <input\n        className={styles.contactInput}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n        placeholder=\"Write name\"\n        aria-label=\"Filter by name\"\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    document.title = 'Contacts';\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <ContactForm />\n      <Filter />\n      {isLoading && !error && (\n        <b\n          style={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            marginTop: '10px',\n          }}\n        >\n          Loading...\n        </b>\n      )}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectStatusFilter","filter","selectIsLoading","isLoading","selectError","error","ContactForm","useSelector","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","contactName","setContactName","_useState3","_useState4","number","setNumber","handleChange","e","_e$target","target","value","name","_jsx","className","styles","children","_jsxs","onSubmit","preventDefault","some","_ref","window","alert","concat","addContact","type","onChange","pattern","title","required","placeholder","ContactList","filtered","useEffect","fetchContacts","normalizedFilter","toLowerCase","filteredContacts","includes","length","map","_ref2","id","onClick","deleteContact","Filter","setFilter","Contacts","document","style","display","flexDirection","alignItems","marginLeft","marginRight","marginTop"],"sourceRoot":""}